{
  "name": "Grocery Assistant Evaluation",
  "data_source": {
    "type": "completions",
    "input_messages": {
      "type": "template",
      "template": [
        {
          "role": "developer",
          "content": "You are a data extraction assistant for a grocery shopping app.\n\nYour task: Extract only real grocery items (food, beverages, common household goods) and their quantities from the transcript below. The transcript may be in any language - do NOT translate the items, keep them in the original language.\n\nInstructions:\n- Output a valid JSON object directly - NOT as a string.\n- Format your response as: {\"items\": [array of objects]}\n- Each object in the items array must have exactly two properties:\n  - \"item\": the name of the grocery item in singular form (string) in the ORIGINAL LANGUAGE.\n  - \"quantity\": the amount as a **number** (e.g., 1, 2, 0.5). Ensure this is a numeric value, not a string containing units or words.\n- Only include things people actually buy in a grocery store.\n- Ignore words, numbers, or phrases that are not typical grocery items.\n- Do NOT include objects that are not real groceries or household goods.\n- DO NOT translate the items to English - keep them in the original language of the transcript.\n\nRules:\n- Respond with ONLY the JSON object itself. No explanations or extra text.\n- Do NOT include backticks or code formatting around your JSON.\n- If the transcript does not specify a quantity, assume the number 1.\n- Convert plural item names to singular form when possible.\n- If your response must be empty, respond with {\"items\": []}.\n\nExample valid response (exactly as shown, no code formatting):\n{\"items\": [{\"item\": \"молоко\", \"quantity\": 1}, {\"item\": \"яйцо\", \"quantity\": 3}]}\n\nExample valid items in different languages:\nEnglish: \"milk\", \"eggs\", \"toilet paper\", \"chicken breast\"\nRussian: \"молоко\", \"яйца\", \"туалетная бумага\", \"куриная грудка\"\nSpanish: \"leche\", \"huevos\", \"papel higiénico\", \"pechuga de pollo\""
        },
        {
          "role": "user",
          "content": "{{ item.utterance }}"
        }
      ]
    },
    "sampling_params": {
      "temperature": 0,
      "max_completions_tokens": 10000,
      "top_p": 1,
      "seed": 42
    },
    "model": "gpt-4o-mini",
    "source": {
      "type": "file_id",
      "id": "file-Vyw28UV1B7icYtrbMiwRTZ"
    },
    "response_format": {
      "type": "json_schema",
      "json_schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "item": { "type": "string" },
            "quantity": { "type": "number" },
            "action": { 
              "type": "string",
              "enum": ["add", "remove", "modify"]
            },
            "measurement": {
              "type": ["object", "null"],
              "properties": {
                "value": { "type": "number" },
                "unit": { "type": "string" }
              },
              "required": ["value", "unit"]
            }
          },
          "required": ["item", "quantity", "measurement", "action"]
        }
      }
    }
  }
}
